:root {
  --color-white:#FFFFFF;
  --color-link: #232323;
  --color-hover: #FB545F;
  --color-bg-primary:#FFFFFF;
  --color-bg-secondary:linear-gradient(129.76deg, #A38DFD 0%, #FFA0A2 93.53%);
  --color-bg-pourcentage:#FE525B;
  --color-text-primary:#FFFFFF;
  --color-text-secondary:#232323;
}

:root {
  --fz-normal:1rem;
  --fz-h1:1.5rem;
  --fz-h2:1.375rem;
  --fz-h3:0.75rem;
  --lh-extra-thin: 1;
  --lh-thin: 1.2;
  --lh-normal: 1.5;
  --lh-medium: 2.0625;
  --lh-large: 2.25;
  --ff-normal:Poppins,serial ,arial;
  --ff-titre:Comfortaa,serial,arial;
}

:root {
  --max-width: 1440px;
  --min-width: 375px;
}

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*, *::before, *::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

h1 {
  font-size: var(--fz-h1);
}

h2, h3 {
  font-family: var(--ff-normal);
}

h2 {
  font-size: var(--fz-h2);
}

h3 {
  font-size: var(--fz-h3);
}

img {
  width: 100%;
}

a:link {
  color: var(--color-link);
  text-decoration: none;
}

a:hover {
  color: var(--color-hover);
  text-decoration: none;
}

ul {
  list-style-type: none;
}

.wrapper {
  max-width: var(--max-width);
  min-width: var(--min-width);
  margin: 0 auto;
}

body {
  font-family: var(--ff-normal);
  font-size: var(--fz-normal);
}

.header-page {
  padding: 0;
}

.header-page .navPrincipale {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: 156px;
  width: 100%;
  background-color: rgba(255, 255, 255, 0.95);
  position: fixed;
  top: 0;
  left: 0;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding-bottom: 21px;
}

.header-page .navPrincipale ul {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  text-align: center;
  padding: 0;
}

.header-page .navPrincipale ul .titre {
  -webkit-box-ordinal-group: 0;
      -ms-flex-order: -1;
          order: -1;
  font-family: var(--ff-titre);
}

@media screen and (min-width: 768px) {
  .header-page .navPrincipale ul .titre {
    -webkit-box-ordinal-group: 1;
        -ms-flex-order: 0;
            order: 0;
  }
  .header-page .navPrincipale {
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    padding-top: 16px;
    padding-bottom: 17px;
    height: 60px;
  }
  .header-page .navPrincipale ul {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
  .header-page .navPrincipale ul li {
    margin-left: 60px;
  }
}

@media screen and (min-width: 1440px) {
  .header-page .navPrincipale {
    padding-left: 336px;
  }
}

.Decompte h2 {
  font-family: 'Poppins', sans-serif;
  font-weight: 300;
  padding-left: 67px;
  padding-right: 68px;
  padding-top: 50px;
}

.Decompte .flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  padding-bottom: 50px;
  -ms-flex-wrap: nowrap;
      flex-wrap: nowrap;
}

.Decompte .temps {
  background: var(--color-bg-secondary);
  color: var(--color-white);
  padding-left: 33px;
  padding-right: 32px;
  margin-right: 5px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  max-width: 90px;
}

.Decompte h1 {
  margin-bottom: 0;
}

.Decompte h3 {
  margin-top: 0;
  padding-bottom: 11px;
  font-weight: 400;
}

@media screen and (min-width: 768px) {
  .Decompte h2 {
    font-size: 48px;
    text-align: center;
  }
  .Decompte .flex {
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
  .Decompte .temps {
    margin-right: 20.83px;
    max-width: 118px;
    padding-left: 31px;
    padding-right: 30px;
  }
  .Decompte h1 {
    font-size: 55px;
    font-weight: bold;
    margin-top: 14px;
  }
}

@media screen and (min-width: 1440px) {
  .Decompte .flex {
    -ms-flex-line-pack: center;
        align-content: center;
  }
  .Decompte .temps {
    margin-right: 20.83px;
  }
}

.hero {
  background-image: url("../images/Image Hero.svg");
  height: 570px;
  background-repeat: no-repeat;
  background-size: cover;
}

div > h2 {
  display: none;
}

@media screen and (min-width: 768px) {
  div > h2 {
    font-weight: 700;
    font-size: 48px;
    color: white;
    display: inherit;
    position: absolute;
    padding-left: 193px;
    padding-top: 270px;
  }
}

@media screen and (min-width: 1440px) {
  div > h2 {
    display: none;
  }
}

.produits {
  margin-bottom: 50px;
}

.produits article {
  position: relative;
}

.produits article img {
  display: block;
}

.produits p {
  position: absolute;
  top: 0;
  left: 0;
  display: inherit;
  background-color: var(--color-bg-pourcentage);
  color: var(--color-white);
  padding-left: 13px;
  padding-right: 13px;
  padding-top: 15px;
  padding-bottom: 15px;
  font-size: 16px;
  margin-top: 0;
}

@media screen and (min-width: 768px) {
  .produits .flex {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }
  .produits article {
    max-width: 33.3%;
  }
}

@media screen and (min-width: 1440px) {
  .produits {
    margin-bottom: 98px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
